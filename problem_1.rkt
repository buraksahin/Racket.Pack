#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 22 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 22 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 15 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 14 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 20 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 17 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 15 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 585 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 169
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname fm) (read"
 #"-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor "
 #"repeating-decimal #t #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 12 #"; a Word is "
0 0 58 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 58 29 1 #"\n"
0 0 17 3 22 #"; - (cons Symbol Word)"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 17 3 21 #"; List of Words (LoW)"
0 0 58 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 58 29 1 #"\n"
0 0 17 3 19 #"; - (cons Word LoW)"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 17 3 43 #"; Word (LoS) --> LoW (list of list symbols)"
0 0 58 29 1 #"\n"
0 0 17 3 30 #";(define (permutations w) ...)"
0 0 58 29 1 #"\n"
0 0 17 3 31 #"; to generate whole permuations"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"permutations"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 7         277 58           0 0           0 45 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"permutations"
0 0 2 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 2 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 12 #"permutations"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 2 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 5 #"))]))"
0           0 0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"permutations"
0 0 58 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 12 #"permutations"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 17 3 31 #";insert-all: Symbol LoW --> LoW"
0 0 58 29 1 #"\n"
0 0 17 3 60
#"; to insert given symbol in all places for each word in list"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"c"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"c"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 7         319 58           0 0           0 52 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 2 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"...s"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 4 #"...s"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 2 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 5 #"))]))"
0           0 0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 17 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 17 3 2 #";("
0 0 17 3 7 #"permute"
0 0 17 3 1 #" "
0 0 17 3 1 #"s"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 23 #"low)) ;the acc solution"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"insert-all"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 3 #"low"
0 0 22 3 6 #")))]))"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 17 3 46 #";insert-into-aword: Symbol LoS --> List-of-LoS"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 57 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 58 29 1 #"\n"
0 0 58 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 58 3 1 #" "
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"x"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 58 3 1 #" "
0 0 14 3 1 #"b"
0 0 58 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 7         319 58           0 0           0 52 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"...s"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 4 #"...s"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 5 #"))]))"
0           0 0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #"))]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"insert-into-aword"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 7 #"))))]))"
0 0 58 29 1 #"\n"
0 0 58 29 1 #"\n"
0 0 17 3 36 #";permute: Symbol LoS --> List-of-LoS"
0 0 58 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"permute"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 58 3 1 #" "
0 0 14 3 4 #"los0"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"("
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 17 3 53 #";;acc1: ans is List-of-LoS which holds permuted words"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 17 3 66
#";;acc2: pre is LoS the symbols processed so far which will be used"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 17 3 14 #";; as a prefix"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 17 3 37 #"; LoS LoS List-of-LoS --> List-of-LoS"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"inner"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 58 3 1 #" "
0 0 14 3 3 #"pre"
0 0 58 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 58 3 1 #" "
0 0 14 3 3 #"pre"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 2 #")]"
0 0 58 29 1 #"\n"
0 0 58 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 29 1 #"\n"
0 0 58 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 5 #"inner"
0 0 58 3 1 #" "
0 0 58 29 1 #"\n"
0 0 58 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 58 3 1 #" "
0 0 14 3 3 #"pre"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 58 3 1 #" "
0 0 14 3 3 #"pre"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 58 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"inner"
0 0 58 3 1 #" "
0 0 14 3 4 #"los0"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 58 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0           0
